Bitacora de los capitanes:

28/09/2020:
    - Se termino ALU y ALUControl.
    - Se termino la etapa de Execute.
    - Proximo paso: Empezar etapa de Memory
    commited

05/10/2020:
    - Estuvimos viendo Stage Memory
    - DataMemory, en principio vamos a utilizar la del BIP
    - Falta ver Branch con ZeroFlag.
    - Falta todo el Memory (Visto el 07/10)

07/10/2020:
    - Estuvimos viendo Memory, vamos utilizamos la de Diego, estamos realizando cambios.
    - store_instruction_type y load_instruction_type guardan los datos depediendo del control unit (opcode[2:0] creo)
        tenemos que implementarlo en nuestro codigo.

19/10/2020:
    - Integramos en uno el store_instruction_type y el load_instruction_type,
        extienden el valor del registro dependiendo de si es Load o Store y si es por Byte, Unsigned Byte o Word
    - Hicimos cambio en el DataMemory y en el Memory
    - Next Step: Verificar Memory, DataMemory y SignExtensionMem que esten bien las variables
    - Falta: No sabemos como utilizar el AluZero que viene de Execute

26/10/2020:
    - Verificamos y realizamos la correcta implementaci칩n de:
        * InstructionFetch
        * InstructionDecode
        * Execute (vimos la mitad)
        TODO: Seguir con Execute y ver Memory

28/10/2020:
    - Terminamos Execute.
    - Memory: implementamos BEQ (Branch on Equals) que utiliza ALUZero y EXE[2]

3/11/2020:
    - Memory: Falta "inFR_wd" que entra a WB
    - WB: Empezamos a implementarlo
    - TODO: terminar WB y memory. Empezar con ForwardingUnit y Tests Unitarios

9/11/2020:
    - Terminamos la implementaci칩n de WB y Memory
    - Terminamos modulo de ForwardingUnit
    - TODO: Instanciar ForwardingUnit en Execute, Hazard Unit y Tests Unitarios.

11/11/2020:
    - Terminamos de integrar ForwardingUnit en Execute.
    - Queda HazardUnit y Unit tests.

18/11/2020:
    - Terminamos HazardUnit y lo integramos a ID, conectando con EX y IF.
    - TODO: Ver como realizar los Unit Test y TopLevel (MIPS, ac치 irian los Latchs)

25/11/2020:
    - Empezamos con la implementaci칩n del TopLevel de MIPS e hicimos algunos cambios necesarios en los modulos de los Stages

25/05/2021:
    - Migramos repo de GitLab de la UNC a GitHub
    - Generamos un script que pasa los registros de assembler a Hexa
    TODO:
	- Generar y poner los Latchs para el MIPS

